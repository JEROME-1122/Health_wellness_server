Step 1 -  Create the folder  structure config(database connection), controllers(all login api end points),middleware(auntenticate),model(schema for all api ), routes (routing the api )

Step 2 - first install the dependencies -bcryptjs,cors,dotenv,express,jsonwebtoken,mongoose

Step 3 - Install all depemtancies and create the index.js and import express, cores, dotend forst and create app constact with express and app.listen to runthe port  

Step 4 - Conttect the database in config folder create db.js and import mongoose and create asynnsc function and get the url link from .env file if connect execute the try block not exeruted catch block executed .

Step 5 - Create authenticate js in middleware folder create authMiddleware.js and  create async function here we pass there argument request , response and next .. first we rquest the authorization  and if the token iif correct try block execute otherwise catch block executed . if the token have check the token given token and login token correct pr not if correct then go to next () procress.

Step 6 -  In this project we add te fitness goal and nutrion . so create the fitness.js in models folder add the type duration diatance calories in the  and user means id get from the User .  same like other 2  .. in user name ,email (usnique true), password .

Step 7 -  In controller folder create authcontroller for write login and resigter controller logic ()... in auth controller create two async function register and login.. in register function get the value name, email, passowrd from the request and find if the email already register or not if resgister showing error . if not register then hash the passowrd and useing the user model to check the schema and save the user into the database .. and sfter resgiter the create the token .. we can access to the user other functionality and token expire 7 day . same like login check the email andd password if correct go next and generate the token validity 7 days 

Step 8 - can provide the reset password so create the passwordController .. first install the nodmailer to send the the code . in passwordController request async function  request the email from the body if it is match then or not provide email send the error message if the user regiter in that id then we send the 6 digit otp using the emailer and sent the otp .. then resetPassword async funtion get the email otp and new passwrd is the email and otp is same then can update the password .. before we add the schema in user.js .. in config file add the nodemailer  and create the Trasnaport


Step 9 - then profile controler to get the profile details and we can shiow the user details or get the user deteils  bassed on the user id


Step 10 - FitnesssController  set some fitness colores running cycligng and strenth some value to find the calories .. first addwork fynction get the worktype and duration from the body and calclute the calories and add the user id  get from the suer detsild and workoutytpw and duration hosw much burned and save the valus in data base .. getworkout find the based on the user id get all the workouts. update (if user edit the details and  get the id from the parems and update the details ). delete the workout .. if we stop the workout or finished get the user id from the params (url )


Step 11 - then goalController set the goal here we set daily weekly and monthly so  using the switch statement .. and add the goal get update and delete same like fintenessContoller 



Step 12 - then nutritionController add the foot with grams and save intothe database from the body  .. and add the goal get update and delete same like fintenessContoller 


Step 13 - then main Progress controller  get the all valuse and  get the all  calculation  


Step 14 - and create all router fitness , goal, nutrition have 4 routes  , and we add the route in the index.js  and auth , reset password add the public lout means before add the use the middle ware and use all other router after middile ware 